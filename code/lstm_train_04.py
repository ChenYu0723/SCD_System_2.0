# -*- coding: utf-8 -*-
# @Time    : 2019/12/14 10:28
# @Author  : Chen Yu

import os
import pandas as pd
import numpy as np
import numpy.linalg as la
import torch
from torch import nn
from torch.autograd import Variable
import torch.nn.functional as F
import torch.utils.data as Data
import matplotlib.pyplot as plt
from utils import *
from datetime import datetime
# 所有station训练一个model，每次epoch都随机测试1000个样本的指标，记录所有mape并画图
path = os.path.abspath('..')

pd.set_option('display.width',1000)
pd.set_option('display.max_rows',1000)
pd.set_option('display.max_columns',500)


# def mape(y_pred, y_true):
#     y_pred = np.array(y_pred)
#     y_true = np.array(y_true)
#     m = np.mean(np.abs((y_true - y_pred)/y_true)) * 100
#     return m
#
#
# def my_acc(y_true, y_pred):
#     F_norm = la.norm(y_true - y_pred, 'fro') / la.norm(y_true, 'fro') + 1e-3
#     return F_norm


def toV(x):
    tmp = torch.FloatTensor(x)
    return Variable(tmp)


class LSTM(nn.Module):
    def __init__(self, input_size, hidden_size, output_size=1, num_layers=2):
        super(LSTM, self).__init__()
        self.lstm = nn.LSTM(input_size, hidden_size, num_layers)
        self.out = nn.Linear(hidden_size, output_size)

    def forward(self, x):
        x, _ = self.lstm(x)
        s, b, h = x.shape
        x = x.view(s*b, h)
        x = self.out(x)
        x = x.view(s, b, -1)
        return x


def main():
    print('reading data ...')
    infile = path + '/data/true_data/all_station_train_data.csv'
    raw_flow = pd.read_csv(infile, header=None)
    # print(raw_flow)

    # trainData_x, trainData_y = trainDataGen(raw_flow, N_TS, N_DAY, N_WEEK)
    trainData_x = raw_flow.iloc[:, :-1].to_numpy()
    trainData_y = raw_flow.iloc[:, -1].to_numpy()
    # trainData_xy = np.array([trainData_x, trainData_y])
    # trainData_xy_no, mao, mio = MaxMinNorm(trainData_xy)
    trainData_x, mao_x, mio_x = MaxMinNorm(trainData_x)
    trainData_y, mao_y, mio_y = MaxMinNorm(trainData_y)

    # trainData_x = trainData_xy_no[0]
    # trainData_y = trainData_xy_no[1]

    trainData_x = toV(trainData_x).view(len(trainData_x),1,N_TS+N_DAY+N_WEEK)
    trainData_y = toV(trainData_y).view(len(trainData_y),1,1)
    # print(trainData_x, len(trainData_x))
    # print(trainData_y, len(trainData_y))
    lll = len(trainData_x)
    train_x = trainData_x[:int(0.75*lll)]  # 60*64*322
    train_y = trainData_y[:int(0.75*lll)]
    # print(train_x, len(train_x))
    # print(train_y, len(train_y))
    test_x = trainData_x[int(0.75*lll):]
    test_y = trainData_y[int(0.75*lll):]

    num_train = len(train_x)

    trainData_set = Data.TensorDataset(train_x, train_y)
    trainData_loader = Data.DataLoader(
        dataset=trainData_set,
        batch_size=BATCH_SIZE,
        shuffle=False,
        num_workers=2
    )

    testData_set = Data.TensorDataset(test_x, test_y)
    testData_loader = Data.DataLoader(
        dataset=testData_set,
        batch_size=BATCH_SIZE_TEST,
        shuffle=False,
        num_workers=2
    )


    lstm = LSTM(N_TS+N_DAY+N_WEEK, 10)
    loss_func = nn.MSELoss()
    optimizer = torch.optim.Adam(lstm.parameters(), lr=LR)

    # ==== train
    print('training data ...')
    rmse_all_ls = []
    mae_all_ls = []
    mape_all_ls = []
    acc_all_ls = []

    rmse_test_all_ls = []
    mae_test_all_ls = []
    mape_test_all_ls = []
    acc_test_all_ls = []

    score_df = pd.DataFrame(-1, index=range(EPOCH), columns=['rmse', 'mae', 'mape', 'acc'])
    for epoch in range(EPOCH):
        print('epoch:', epoch+1)
        epoch_sta_time = datetime.now()
        rmse_epoch_ls = []
        mae_epoch_ls = []
        mape_epoch_ls = []
        acc_epoch_ls = []

        rmse_epoch_test_ls = []
        mae_epoch_test_ls = []
        mape_epoch_test_ls = []
        acc_epoch_test_ls = []

        for step, (batch_x, batch_y) in enumerate(trainData_loader):
            outs = lstm(batch_x)
            loss = loss_func(outs, batch_y)

            optimizer.zero_grad()
            loss.backward()
            optimizer.step()
            if (step+1) % 1000 == 0:
                print(' step:', step+1, 'all:', int(num_train/BATCH_SIZE))

            y_pred = MaxMinNorm_re(outs, mao_y, mio_y).view(-1).data
            y_true = MaxMinNorm_re(batch_y, mao_y, mio_y).view(-1).data
            # try:
            rmse_step, mae_step, mape_step, acc_step = evaluation(y_true, y_pred)
            # except:
            #     rmse_step, mae_step, mape_step, acc_step = .01, .01, 5, .95
            rmse_epoch_ls.append(rmse_step)
            mae_epoch_ls.append(mae_step)
            mape_epoch_ls.append(mape_step)
            acc_epoch_ls.append(acc_step)

        rmse_all_ls.append(np.mean(rmse_epoch_ls))
        mae_all_ls.append(np.mean(mae_epoch_ls))
        mape_all_ls.append(np.mean(mape_epoch_ls))
        acc_all_ls.append(np.mean(acc_epoch_ls))
        if (epoch+1) % 10 == 0:
            print('epoch: {}, loss: {:.5f}'.format(epoch+1, loss.item()))

        # ==== test method 1
        for step_test, (batch_x_test, batch_y_test) in enumerate(testData_loader):
            outs_test = lstm(batch_x_test)
            y_pred_test = MaxMinNorm_re(outs_test, mao_y, mio_y).view(-1).data
            y_true_test = MaxMinNorm_re(batch_y_test, mao_y, mio_y).view(-1).data

            # try:
            rmse_step_test, mae_step_test, mape_step_test, acc_step_test = evaluation(y_true_test, y_pred_test)
            # except:
            #     rmse_step_test, mae_step_test, mape_step_test, acc_step_test = .01, .01, 5, .95

            rmse_epoch_test_ls.append(rmse_step_test)
            mae_epoch_test_ls.append(mae_step_test)
            mape_epoch_test_ls.append(mape_step_test)
            acc_epoch_test_ls.append(acc_step_test)
            break
        rmse_test_all_ls.append(np.mean(rmse_epoch_test_ls))
        mae_test_all_ls.append(np.mean(mae_epoch_test_ls))
        mape_test_all_ls.append(np.mean(mape_epoch_test_ls))
        acc_test_all_ls.append(np.mean(acc_epoch_test_ls))

        # ==== test method 2
        # pred_outs = lstm(test_x)
        # pred_outs = MaxMinNorm_re(pred_outs, mao_y, mio_y).view(-1).data
        # test_y = MaxMinNorm_re(test_y, mao_y, mio_y).view(-1).data
        # try:
        #     rmse_epoch_test, mae_epoch_test, mape_epoch_test, acc_epoch_test = evaluation(test_y, pred_outs)
        # except:
        #     rmse_epoch_test, mae_epoch_test, mape_epoch_test, acc_epoch_test = .01, .01, 5, .95
        # rmse_test_all_ls.append(rmse_epoch_test)
        # mae_test_all_ls.append(mae_epoch_test)
        # mape_test_all_ls.append(mape_epoch_test)
        # acc_test_all_ls.append(acc_epoch_test)

        score_df.iloc[epoch, 0] = rmse_test_all_ls[-1]
        score_df.iloc[epoch, 1] = mae_test_all_ls[-1]
        score_df.iloc[epoch, 2] = mape_test_all_ls[-1]
        score_df.iloc[epoch, 3] = acc_test_all_ls[-1]

        # ==== save
        print('saving net ...')
        # print('mao_x:', mao_x)  # mao_x: 6864
        # print('mio_x:', mio_x)  # mio_x: 1
        # print('mao_y:', mao_y)  # mao_y: 6864
        # print('mio_y:', mio_y)  # mio_y: 1
        torch.save(lstm, 'net_lstm_all_station.pkl')

        epoch_end_time = datetime.now()
        print('epoch used time:', epoch_end_time - epoch_sta_time)

    # ==== print score
    print('train score:')
    print(rmse_all_ls)
    print(mae_all_ls)
    print(mape_all_ls)
    print(acc_all_ls)

    print('test score:')
    print(rmse_test_all_ls)
    print(mae_test_all_ls)
    print(mape_test_all_ls)
    print(acc_test_all_ls)

    # # ==== plot
    # plt.plot(range(1, EPOCH+1), rmse_all_ls, c='r', label='训练集')  # ls='--', marker='^',
    # plt.plot(range(1, EPOCH+1), rmse_test_all_ls, c='b', label='测试集')  # ls='--', marker='^',
    # # plt.xticks(range(1, EPOCH+1))
    # # plt.yticks(range(0, 110, 10))
    # # plt.ylim((0, 100))
    # plt.xlabel('迭代次数')
    # plt.ylabel('RMSE')
    # # plt.title('Rmse of all station')
    # plt.legend(loc='best')
    # plt.tight_layout()
    # plt.savefig(path + r'result/all_station_result/rmse_all.png', dpi=300)
    #
    # plt.plot(range(1, EPOCH+1), mae_all_ls, c='r', label='训练集')  # ls='--', marker='^',
    # plt.plot(range(1, EPOCH+1), mae_test_all_ls, c='b', label='测试集')  # ls='--', marker='^',
    # # plt.xticks(range(1, EPOCH+1))
    # # plt.yticks(range(0, 110, 10))
    # # plt.ylim((0, 100))
    # plt.xlabel('迭代次数')
    # plt.ylabel('MAE')
    # # plt.title('Mae of all station')
    # plt.legend(loc='best')
    # plt.tight_layout()
    # plt.savefig(path + r'result/all_station_result/mae_all.png', dpi=300)
    #
    # plt.plot(range(1, EPOCH+1), mape_all_ls, c='r', label='训练集')  # ls='--', marker='^',
    # plt.plot(range(1, EPOCH+1), mape_test_all_ls, c='b', label='测试集')  # ls='--', marker='^',
    # # plt.xticks(range(1, EPOCH+1))
    # # plt.yticks(range(0, 110, 10))
    # # plt.ylim((0, 100))
    # plt.xlabel('迭代次数')
    # plt.ylabel('MAPE (%)')
    # # plt.title('Mape of all station')
    # plt.legend(loc='best')
    # plt.tight_layout()
    # plt.savefig(path + r'result/all_station_result/mape_all.png', dpi=300)
    #
    # plt.plot(range(1, EPOCH+1), acc_all_ls, c='r', label='训练集')  # ls='--', marker='^',
    # plt.plot(range(1, EPOCH+1), acc_test_all_ls, c='b', label='测试集')  # ls='--', marker='^',
    # # plt.xticks(range(1, EPOCH+1))
    # # plt.yticks(range(0, 110, 10))
    # # plt.ylim((0, 100))
    # plt.xlabel('迭代次数')
    # plt.ylabel('Accuracy')
    # # plt.title('Accuracy of all station')
    # plt.legend(loc='best')
    # plt.tight_layout()
    # plt.savefig(path + r'result/all_station_result/acc_all.png', dpi=300)
    #
    # plt.show()

    return score_df


def test():
    infile = path + '/data/raw_data/metroData_ODflow_15.csv'
    raw_flow = pd.read_csv(infile)
    # print(raw_flow)
    print('inFlow max:', max(raw_flow[' inFlow']))  # inFlow max: 6864
    print('inFlow min:', min(raw_flow[' inFlow']))  # inFlow min: 0

    # trainData_x, trainData_y = trainDataGen(raw_flow, N_TS, N_DAY, N_WEEK)
    # trainData_x = MaxMinNorm(trainData_x)
    # trainData_y = MaxMinNorm(trainData_y)
    #
    # trainData_x = toV(trainData_x).view(len(trainData_x),1,N_TS+N_DAY+N_WEEK)
    # trainData_y = toV(trainData_y).view(len(trainData_y),1,1)
    # print(trainData_x, len(trainData_x))
    # print(trainData_y, len(trainData_y))

    # trainData_set = Data.TensorDataset(trainData_x, trainData_y)
    # trainData_loader = Data.DataLoader(
    #     dataset=trainData_set,
    #     batch_size=BATCH_SIZE,
    #     shuffle=True,
    #     num_workers=2
    # )
    #
    # for epoch in range(1):
    #     for step, (batch_x, batch_y) in enumerate(trainData_loader):
    #         print('Epoch: ', epoch, '| Step: ', step)
    #         print('batch x: ')
    #         print(batch_x)
    #         print('batch y: ')
    #         print(batch_y)


if __name__ == '__main__':
    print('system start')
    starttime = datetime.now()

    # interval = 15
    # HOUR_INTERVAL = 16
    # STATION_ID = 2011  # 2035 2011

    N_TS = 3
    N_DAY = 3
    N_WEEK = 3
    EPOCH = 100
    BATCH_SIZE = 100
    BATCH_SIZE_TEST = 5000
    LR = .01

    score_df = main()
    # test()

    endtime = datetime.now()
    usetime = (endtime - starttime).seconds
    h = int(usetime / 3600)
    m = int((usetime - 3600 * h) / 60)
    s = usetime - 3600 * h - 60 * m
    print('time:', h, 'h', m, 'm', s, 's')
    print('system end')

'''

train score:
[40.97308378718731, 36.75433870482314, 35.81081363901964, 36.04507815502743, 35.728395492894975, 35.98323512807957, 35.26956179594018, 35.00620312286675, 34.771556713762166, 34.67484275288044, 34.571861199377565, 34.476904270017194, 34.68926694653284, 34.63835466686681, 34.63427900186446, 34.53616207262411, 34.490313556809426, 34.495652572303264, 34.45401118828459, 34.44492765052628, 34.39031365489874, 34.32453898068516, 34.038606380255594, 33.910286196271166, 33.84620190668116, 33.7918924199284, 33.71117995166353, 33.563293851762275, 33.43028685116876, 33.36700132577949, 33.291845382930646, 33.16533830576453, 33.1140782341334, 33.073462819600444, 33.04616547753831, 33.15410138604047, 32.887275620994316, 32.95066584460905, 32.8603807488626, 32.883698205276325, 32.7750601947841, 33.60345039741598, 33.57758614092769, 32.793925813913596, 34.12309450044875, 34.984424216056034, 34.99255657654638, 32.84759759813131, 32.567802168935984, 32.59336870693548, 34.127255290329764, 34.922336118162, 32.49154338390716, 32.383973907869496, 32.43666952403486, 32.342360541313326, 32.3086852607045, 32.32147991978175, 32.22607528897876, 32.18076848598522, 32.33626682541047, 42.835017280396656, 32.76938491284258, 32.28164064797902, 32.16279116482405, 32.21148116728746, 32.086789931223144, 32.17099630898081, 32.151271154862975, 64.14728909190866, 37.09352468746049, 32.579633842711495, 32.417843522691655, 32.25270484632459, 32.062055347312146, 32.02296536493825, 32.10861307128133, 31.878332018924723, 31.895163649323855, 137.8766562230706, 310.1607894420157, 306.22760291148614, 307.4974141028261, 292.68215979021596, 296.46503862282214, 295.02689371659784, 295.21968276127757, 303.0023289184011, 287.14485196605546, 274.6239940554951, 282.46133093505716, 287.07950690699687, 264.45666200133695, 302.4310168322236, 288.02296072944404, 297.3332113374046, 291.9450040139207, 262.24911987469267, 255.1099461676694, 282.596439781414]
[29.22619, 25.759007, 25.176844, 25.367817, 25.210777, 25.360893, 24.921661, 24.722816, 24.586864, 24.52284, 24.453375, 24.42236, 24.612, 24.571575, 24.608398, 24.593527, 24.570387, 24.605013, 24.567701, 24.573526, 24.540747, 24.480509, 24.23687, 24.151932, 24.101181, 24.066599, 24.032776, 23.939587, 23.846098, 23.805525, 23.769075, 23.660929, 23.631693, 23.58355, 23.586037, 23.678673, 23.511408, 23.552814, 23.477333, 23.518883, 23.419899, 23.886908, 23.881021, 23.392141, 24.120369, 24.763842, 24.903124, 23.432089, 23.252216, 23.268564, 24.157724, 25.08496, 23.231045, 23.124075, 23.174562, 23.101118, 23.075294, 23.067493, 23.026081, 23.004084, 23.118877, 30.48832, 23.396696, 23.100483, 22.985764, 22.99765, 22.943953, 22.966623, 22.953459, 42.02544, 26.24806, 23.321903, 23.206306, 23.098352, 22.923355, 22.937998, 22.971127, 22.834486, 22.853481, 91.823685, 220.40363, 216.99065, 217.4903, 204.10155, 207.30817, 206.07965, 208.16025, 215.38814, 201.1279, 190.0544, 200.15175, 203.47777, 182.28331, 214.18617, 204.00343, 212.07741, 208.03241, 186.3226, 184.12587, 199.94212]
[21.10955897321882, 17.71166788464723, 17.4259456220746, 17.78725074826643, 17.39966803674119, 16.941139330768596, 16.555196143953438, 16.477731744043528, 16.447702289405132, 16.423623857408465, 16.383760844507112, 16.3900373018266, 16.503621510624782, 16.609384694288085, 16.874119875508427, 17.064913361846962, 17.258415690038085, 17.41251926125381, 17.40959176296507, 17.48594320272772, 17.466327117474084, 17.325290987631945, 17.019003597973697, 16.92069207892021, 16.86505801895406, 16.827314535124568, 16.76766675049154, 16.680293237327014, 16.59952857789036, 16.544953342968917, 16.497675239551473, 16.38904825347721, 16.339794930139714, 16.262414939846135, 16.283489595415933, 16.378310829105434, 16.296286816970188, 16.293977948966702, 16.164998984050268, 16.208142354865945, 16.135089410153274, 16.394780626092402, 16.276046730394814, 16.114914735788002, 16.74217652727068, 17.8556063835826, 17.23719641964669, 16.119160227165906, 15.981794012362663, 15.939465705345498, 17.374517659416945, 18.599184001344142, 16.004621036938676, 15.776653673151229, 15.819967226890357, 15.716621038303543, 15.701027398847875, 15.641082946617525, 15.586729799624196, 15.583319297127037, 15.679294783694315, 23.382887533059044, 15.77133065194804, 15.832061092238737, 15.680859403820477, 15.673189792828655, 15.613580671150707, 15.572894622008315, 15.560472005815175, 34.34654933604869, 18.993722634577143, 15.96021993586142, 15.992481484141726, 15.960034016727013, 15.65312405163844, 15.773378716120693, 15.817745340318966, 15.703369914046029, 15.716337420981267, 85.06362222588078, 181.75069019783155, 177.7018905323402, 179.10508922612476, 158.8688501274858, 164.10997719947713, 162.5185042411513, 163.38047184323176, 179.22891512159748, 165.0362318995802, 153.86459722967177, 172.10693998319314, 171.2536495134922, 142.3651830005769, 179.75394468258145, 165.63961474147013, 173.25607992596233, 169.14346558284842, 153.8353401941696, 152.75159038105315, 160.92339729275773]
[0.8711911516340888, 0.886075250352428, 0.8886104650266969, 0.8885965673920809, 0.8907916871151096, 0.891728663779033, 0.8938624732109934, 0.8943615088471631, 0.8948535689391334, 0.89500627837404, 0.8951546537604271, 0.8951511962708107, 0.8946048745585208, 0.8939758398949493, 0.8930936072437737, 0.8926772890200007, 0.892122968011879, 0.8915918290757142, 0.8915972468268658, 0.8913640443561078, 0.8914689859996515, 0.8915655875250498, 0.8921873947860358, 0.892562738930869, 0.8928312659831437, 0.8930727155510287, 0.8935104431823112, 0.8939627004411681, 0.894315906443493, 0.8945286922235918, 0.8947156864098529, 0.8950927752651154, 0.8953126173904588, 0.8956438017114383, 0.8956971578790317, 0.8952093372633791, 0.8956168833339511, 0.895595381339216, 0.8962916064265525, 0.8961156314429185, 0.8964852689036593, 0.8921924821405154, 0.8951808550616303, 0.8962373190673849, 0.8929766442387351, 0.8767804624133168, 0.890054000394654, 0.896295551730913, 0.8971866449586764, 0.8973490756523226, 0.8760866479681075, 0.8835611123194232, 0.8974968792541809, 0.8986400721852315, 0.8984327540383162, 0.8988764603594721, 0.8989162411666264, 0.8991133810691871, 0.8994815310119135, 0.89964746165392, 0.8992108338670617, 0.8635862803358593, 0.8983668498237798, 0.8988033670352786, 0.8994623893782022, 0.8995166527734313, 0.8997714460733511, 0.900128654253394, 0.9002000472476016, 0.7943515046528968, 0.8824287770231569, 0.8982050093456879, 0.8983026258868154, 0.8981681970128231, 0.8998156245876914, 0.899384154362721, 0.8988965456230594, 0.8996060805821839, 0.8996104941530275, 0.5166111670164235, 0.18790959007435515, 0.1956030178787582, 0.1970150707139444, 0.18989400581849647, 0.18738404511260878, 0.1925171041969677, 0.17936690744621553, 0.1979603244576265, 0.23374605090322212, 0.2524964236066678, 0.21911692797758678, 0.226294516203523, 0.29062402818876737, 0.1890246265613035, 0.20631699037538517, 0.20736778771207443, 0.21977875757618295, 0.2981508499660147, 0.3148343038687752, 0.2537868300129668]
test score:
[53.87034143667857, 49.80102678323239, 48.798645643264095, 48.76227576432518, 49.34436592910928, 48.37699808109596, 49.05851182491353, 48.970896602637104, 48.410783540625594, 47.57881405933293, 46.56850829342551, 45.900614906298735, 45.5306947032731, 45.53046504017215, 46.07529949373996, 45.495288270059675, 44.958575186821896, 44.49974869642216, 44.422016966462294, 44.287586176216124, 44.04619705430007, 43.86786723929862, 43.78264261463013, 43.65557289098269, 43.63459814895482, 44.16477987128914, 44.1848493794219, 43.94672482392849, 43.71926427769782, 43.63851659723146, 43.57837979768437, 43.61759909691444, 43.38788992414862, 43.14459366820667, 42.65648750061913, 42.66917519700829, 42.553801306816204, 42.4469822937505, 42.33117487980402, 42.21219284701431, 42.16637506658411, 45.44369199196974, 42.563509975556265, 42.68167398568047, 41.26046182005174, 51.15834974441016, 43.66497273263308, 43.22015831545003, 43.04685684388382, 42.94455272601114, 44.14148077936334, 42.011187615459015, 42.409822877112596, 42.369798190377374, 42.367534686779955, 42.5058133886873, 42.70680258218523, 42.50128370178272, 42.500037558840106, 42.35623153946451, 42.282358730415105, 45.60230343337343, 43.14610791614098, 43.500358092471394, 42.98506558557812, 42.88184059382817, 42.75645475189908, 42.2818468726011, 42.23132473645867, 50.99941858247077, 67.60111548825593, 43.476110235676444, 43.2006211644704, 43.014300484263444, 43.16086257171695, 42.98451196141151, 42.9055543486929, 42.79812017485659, 43.08966931580509, 394.24511026854725, 430.47029341204836, 400.44106566024027, 366.89402592635463, 379.291257271238, 370.7763935953812, 379.48269092495747, 368.5167228131878, 386.11740443928494, 332.01065675597926, 310.9826016781264, 367.8539450423185, 357.5487231201641, 377.0588575295644, 349.3163170183812, 380.2146376272911, 440.36386109432755, 335.44600542255694, 343.9599166924907, 325.72922823198536, 316.45525431985016]
[32.859333, 29.76504, 29.562819, 27.508036, 27.441797, 27.47645, 27.61606, 27.522924, 27.314688, 27.068417, 26.743027, 26.590946, 26.655855, 26.451344, 26.32846, 26.119877, 25.9986, 25.890272, 25.858335, 25.80796, 25.708029, 25.690334, 25.665863, 25.60992, 25.642721, 25.922306, 25.909746, 25.749935, 25.607845, 25.48895, 25.33958, 25.300888, 25.214424, 25.171978, 24.920645, 24.9021, 24.890738, 24.925777, 24.952988, 24.851894, 24.871641, 25.65387, 25.311543, 25.346653, 24.54768, 34.26213, 25.473595, 25.768684, 25.838827, 25.734982, 28.01168, 24.437063, 25.31825, 25.429264, 25.4511, 25.556585, 25.685436, 25.606897, 25.581491, 25.4081, 25.058683, 30.424273, 25.664999, 25.679651, 25.354967, 25.52985, 25.227562, 25.059843, 25.027027, 29.72025, 25.841858, 24.878492, 24.809689, 24.575094, 24.835617, 24.856783, 24.92991, 24.805157, 24.830296, 251.33739, 298.83066, 268.49945, 204.59865, 265.03015, 252.14046, 256.04926, 221.47942, 229.27892, 216.34132, 200.72887, 248.82109, 224.55641, 232.08571, 235.02556, 278.58054, 313.79648, 205.2851, 214.10577, 207.36807, 183.03964]
[24.77023487862868, 21.630585126769848, 21.34628435358023, 16.156792717102245, 15.209184768490303, 15.90602743702057, 16.172734027107555, 16.26389068670762, 16.276333949122673, 16.178862635905926, 15.935144382409561, 15.686399145768238, 15.555521215383823, 15.019069994107271, 14.218817909176533, 13.547413175304731, 13.231230125977444, 13.164097299942604, 13.314147054766996, 13.496136359679394, 13.627715485218244, 13.222893060017855, 13.201404639925713, 13.224682297844153, 13.312360768516859, 13.617133922301806, 13.65256748902492, 13.486146754943407, 13.336641035782986, 13.22552898946481, 13.145871107012798, 13.14190889780338, 13.223759113596035, 13.623847516301351, 13.657417530432726, 13.718582049776346, 14.033062402636578, 14.39864351772345, 14.806710059444109, 14.792014945011873, 15.03691794589544, 13.306389596217718, 16.46930170364869, 16.257138387897076, 16.8984955511032, 21.092938421628414, 14.577415079260485, 17.17842885125906, 17.485545833523457, 17.334631830453873, 16.140000206919815, 14.230495423842699, 17.556477271211453, 17.85891640644807, 17.955793048708866, 18.18342313934595, 18.28135205193972, 18.341761388075657, 18.238212206424812, 17.87014125058284, 17.273916638432404, 17.578539978235195, 19.138781344279266, 18.78572839957017, 18.347808795097546, 18.754433926481468, 18.134836107492447, 17.94528556175721, 17.81155390617175, 19.052099312345188, 18.470059774624996, 16.363915227926693, 16.48835316300392, 16.019501995581848, 16.896312655164646, 16.867236038431145, 16.887413824980076, 16.696961319599396, 16.71090858678023, 246.70445460539597, 297.1691996623308, 269.0350931424361, 137.30421127417148, 246.36380672454834, 221.0650500578758, 250.13010165630243, 163.81588203784747, 175.8937702729152, 206.26680224369733, 193.87121490943127, 233.8173392491463, 187.84851531187692, 184.94462095774136, 176.55804264239777, 228.54513678795252, 232.873196938099, 156.88921816838092, 154.72938341972156, 183.0297774229294, 114.34451356912271]
[0.8801633621679841, 0.8911734697563315, 0.8943259317203864, 0.8955718728737665, 0.8937754478214108, 0.8950236069215893, 0.89397642524513, 0.8947021208054915, 0.8959416209944467, 0.8977076258254556, 0.8996789005867086, 0.900898305007943, 0.9012233184427512, 0.9018189122126226, 0.9014108846146945, 0.9028112275430703, 0.9041807388253699, 0.9051773241821303, 0.9054089403258243, 0.9055285933873792, 0.9057991269939126, 0.9059093894212427, 0.9058470793061605, 0.9059765137295839, 0.9060720483163232, 0.9050859185375907, 0.9054038588044352, 0.9058554768363464, 0.9062263375191532, 0.9065654834658755, 0.9068607829836813, 0.9067459813311515, 0.9072562209782671, 0.9077963032652042, 0.9087704953652298, 0.9087697340094564, 0.9090592284509683, 0.9093148715970195, 0.9095813257742628, 0.910014672296305, 0.9101147361364637, 0.9043589750341735, 0.9091498928521702, 0.9092457746318495, 0.9117438441008698, 0.8907715719265007, 0.9064829156968965, 0.9077603398479349, 0.9084968908296361, 0.9087750056865693, 0.9045389919187221, 0.9112795854361178, 0.9099027338743293, 0.9097698557931131, 0.9098027450697972, 0.9095369508148502, 0.9091984645812462, 0.9095395036268942, 0.9096618922100228, 0.9099780681807689, 0.9102607688505377, 0.902308517565815, 0.9086186471377078, 0.9080195161373408, 0.9090370163053314, 0.9089734832480166, 0.9093364374249078, 0.9102561256808306, 0.9102996710101252, 0.8913632937402363, 0.8190376904930786, 0.9083914265304821, 0.9088282022912003, 0.9091714261002747, 0.9089705059504414, 0.9092022995841607, 0.9092644836207481, 0.9095653486822599, 0.9091776210513132, 0.1979561671658156, 0.08765813424747812, 0.17245437349891388, 0.2694757861755164, 0.1964279062284548, 0.2246711889166142, 0.22002855656194711, 0.2523932303632978, 0.22095344218140325, 0.314479381951861, 0.35631753453752624, 0.23336559087517408, 0.2688909504796945, 0.2291169169689473, 0.27390447645642435, 0.1931540919631274, 0.07832969939405106, 0.31660698006863375, 0.28784874109226033, 0.3343536359002518, 0.36490199451358735]

'''

'''
    N_TS = 3
    N_DAY = 3
    N_WEEK = 3
    EPOCH = 100
    BATCH_SIZE = 10
    BATCH_SIZE_TEST = 5000
    LR = .01

train score:
[40.53636948810842, 37.21681058021401, 36.78144773208788, 37.35543248915686, 36.6395648895082, 36.39827623000038, 36.50261312785345, 36.799630410479814, 38.51448202940027, 38.45155277427907, 38.24900035279095, 39.17356423781326, 39.957032859479014, 40.17427880943436, 41.57288581528338, 47.30358248495846, 45.681284160123575, 50.981230031659166, 44.008512184370566, 41.8576692339235, 40.10623268500193, 39.30735951000847, 39.48437634170232, 39.6117029851474, 39.462641360132245, 41.375964631413154, 41.316323971416146, 44.86922207543308, 45.211668169297546, 41.37127034874503, 40.86512291592025, 41.10751142725714, 41.163154173872336, 57.96546663978205, 47.17431257626654, 46.53302693137743, 44.227395054311344, 43.356038407576804, 42.53621272583553, 43.82738878561169, 46.849830781621364, 42.78093820140174, 41.74363023614725, 42.769039858865014, 41.46460587149741, 41.63171478094999, 43.27219971552772, 43.27094043691396, 45.51032675535411, 43.359226941623234, 40.29349860089383, 40.89847494202361, 38.776718677039796, 39.817573045571, 39.80567968255694, 39.656487921173124, 42.028583847063935, 40.36546687833132, 41.585304736684776, 41.016159146728704, 40.27059240569484, 40.489411741659644, 40.92832139747173, 40.92302410138814, 40.96354607559095, 41.0817228993939, 40.92125447030837, 40.88619076149577, 40.76247361281434, 40.5992461102225, 40.67460589954508, 40.608433130901055, 40.560954977238104, 40.723762280450885, 40.42585400992421, 40.1576791984021, 40.196827714486545, 40.013161051969725, 40.0543311865919, 39.89155469743196, 39.781119707482, 39.851390979136134, 39.77137889852605, 39.63189640367027, 39.58779588614063, 39.39205240964778, 39.83670378021834, 39.76258736603561, 39.66989331428113, 39.527933711416104, 39.53943975885977, 39.37636460932611, 40.63895862124193, 39.005663443709985, 39.76763657927829, 39.457710874260265, 39.317632082478134, 39.25067328487214, 40.43151998728982, 40.10025283468033]
[32.882492, 30.329035, 29.92594, 30.318005, 29.746895, 29.592525, 29.720142, 29.942808, 31.286001, 31.16331, 31.072317, 31.874475, 32.43159, 32.708183, 33.67774, 38.608337, 37.106586, 41.834755, 35.802612, 33.9891, 32.655895, 32.02612, 32.198906, 32.2432, 32.154278, 33.647274, 33.61379, 36.416306, 36.56191, 33.915047, 33.383244, 33.604828, 33.61844, 46.805996, 38.057102, 37.71491, 36.02813, 35.14179, 34.520145, 35.55847, 37.704163, 34.771988, 34.057293, 34.726486, 33.76654, 33.917492, 35.275345, 35.13294, 36.973553, 34.960968, 32.84663, 33.14377, 31.633356, 32.34558, 32.35854, 32.319004, 34.141167, 32.710167, 33.763073, 33.358604, 32.757607, 32.903885, 33.33346, 33.34273, 33.3791, 33.444733, 33.264336, 33.22898, 33.11278, 32.99077, 33.043346, 32.975105, 32.953407, 33.06766, 32.834557, 32.612873, 32.625774, 32.46925, 32.522488, 32.38197, 32.28565, 32.35241, 32.287228, 32.18414, 32.124256, 31.977318, 32.33285, 32.26246, 32.171753, 32.066154, 32.074326, 31.941696, 32.997345, 31.717354, 32.294746, 32.09922, 31.99244, 31.874666, 32.805676, 32.479515]
[26.93101291997509, 24.021628031001853, 22.80643822979376, 22.921167546768764, 22.930114693952763, 23.045429426552474, 23.25223457117427, 23.350657888453835, 24.399278390749817, 23.706874953355264, 23.9090012978254, 24.888182553690346, 27.503953394091326, 28.715420635785705, 29.358343457977128, 33.08494174878189, 32.53202854967666, 36.17640797853838, 31.631433806292502, 28.585831612660435, 26.10003228897494, 24.979628464786906, 25.34242995793774, 25.327875058996735, 25.53018254557751, 27.441041196126417, 28.2391859255716, 31.133777829762483, 31.9521407949265, 29.835690679924152, 28.915605897718063, 28.903898217294664, 28.73207075508241, 38.8733953017649, 31.753468552516974, 32.3719686408793, 31.077458031233096, 30.005611745709377, 29.17783756442063, 29.649064556257127, 31.74177118392135, 28.945658831342136, 28.414799445361798, 28.669867279426178, 27.561882741832374, 27.051392858065068, 28.021564520030402, 26.604924796200013, 29.008717196738864, 26.663583219092647, 25.15396909294087, 25.060532668106433, 23.861564089181837, 24.995228194528735, 26.131946916492684, 26.89041669295205, 27.465236314136728, 25.01590947442663, 26.976227719274643, 27.462027343149, 27.12951809132134, 27.790146539365292, 29.282075203450905, 29.213297688513766, 29.076072366604844, 28.85659949354519, 28.334445777183895, 27.964760320131496, 27.57763930051893, 27.287735991231735, 27.198267487510467, 27.099868829375836, 27.02907340042873, 27.065479009435098, 26.843192724616685, 26.50010503255147, 26.32466277343634, 25.971133984995856, 25.989645074295723, 25.91175116849841, 25.672001854667098, 25.8246240751497, 25.672245598010953, 25.39320872518323, 25.237130760795115, 24.996169831764927, 25.353996857842485, 25.516768944935976, 25.50566791384057, 25.3045801228979, 25.189546627334483, 25.00975347057637, 26.09709893275394, 24.494224578212272, 25.201938610798614, 24.942092846751354, 24.979916618089533, 24.526873261754126, 25.086726602555174, 24.601475851823658]
[0.8254994142797183, 0.842648938513113, 0.8484613291733686, 0.8482699489426465, 0.8478631084782545, 0.846807219063467, 0.8453567182170105, 0.8446347230663002, 0.838319642303478, 0.8430914860989088, 0.8430190533070906, 0.8382428945558779, 0.8211066547138125, 0.8152297199068173, 0.813352381788325, 0.7925686375221271, 0.7908998072735458, 0.7693845685410041, 0.7996713549261392, 0.8199129373888381, 0.8331104528111939, 0.8383327164787613, 0.8381689804043576, 0.8380746485517125, 0.837507904111475, 0.8255403065085652, 0.8172907129258482, 0.8007213145041571, 0.7965114507790346, 0.8098267410751757, 0.8140213483839392, 0.8144395736383896, 0.8153690957760784, 0.7638823005326026, 0.7986079943916721, 0.7961657107211725, 0.8039649471480047, 0.8091345701697602, 0.8143292503462916, 0.810298465959465, 0.7977303251576723, 0.8145769563551293, 0.8192186091811434, 0.81627641359007, 0.8234748783858323, 0.8254425920279757, 0.8184634659093605, 0.826226150762173, 0.8129499154494406, 0.8256156718120188, 0.8361905887079711, 0.8354629984718317, 0.8435455271845376, 0.8368016789872542, 0.8311228312322924, 0.82767260235468, 0.8254222002976493, 0.837106311368153, 0.8259506633076716, 0.8241058013339596, 0.8257402593786536, 0.8213388031505974, 0.812430507510275, 0.8130856653871334, 0.8140038177998107, 0.8153094049195578, 0.8181226566186413, 0.8202427847106956, 0.8224127211854323, 0.8240183243797291, 0.8246507549184383, 0.825041394827743, 0.8255034452689395, 0.8253019506666295, 0.8263427156958909, 0.828019965906082, 0.8293389427443754, 0.8312181289428404, 0.8310852272547425, 0.8315126175247047, 0.8326800268153294, 0.8319092230633697, 0.8329148763248768, 0.8344999653685283, 0.8352063894984956, 0.8367640114292443, 0.8348395653912719, 0.8334769955902691, 0.8334188132958845, 0.8344977184719428, 0.835349046508407, 0.8363730665260393, 0.8316795417200973, 0.8407215392368657, 0.8371103181355894, 0.8394752481865079, 0.8396183113938033, 0.8399411635969899, 0.8363692123188498, 0.8390009686560858]
test score:
[68.01577037372472, 74.17029997537762, 50.30576430067433, 49.3852441904462, 80.18544485382775, 73.15724449345396, 75.27834417388908, 70.35548685959041, 77.24309106442789, 60.04294524286346, 78.71218089898792, 78.52060152139214, 88.83812746014517, 95.12449182682923, 38.199633979042424, 71.19424216316584, 80.2356514625824, 86.26408682517453, 93.9774792254107, 108.26734218042161, 85.66728255746911, 70.80430777855257, 73.51037607457195, 75.7171700722498, 85.95955398834384, 86.72324594201228, 69.97773432157724, 60.04708235717515, 82.4350122824034, 68.35182994075579, 70.73930876597184, 71.83932538571753, 74.79245371568244, 32.64609403978809, 58.593266664673166, 39.406923752666074, 87.735611912474, 111.28908196954902, 97.38554981361455, 86.80804524207419, 82.15025891050192, 68.77926578805382, 67.36810754401893, 68.35933035712829, 59.81344288049928, 62.380743645249815, 83.74880479557604, 48.23861133000073, 50.90185677789662, 40.565178311037286, 41.193018171696885, 29.391678900229888, 42.53934587256397, 44.881810938563966, 60.90468868252776, 72.13373606646373, 50.48959515335808, 78.92635573055587, 110.80511026544534, 73.51264440025777, 78.14567851335414, 70.66941012449269, 66.90936981866777, 70.41203371716726, 63.117490657924016, 74.87185341364103, 70.2231828540707, 71.13247228433193, 66.88092847553777, 67.9329359667496, 70.17569329680684, 64.63781304314062, 67.67863010327743, 69.23335765727386, 66.11792185061286, 58.615656321631555, 61.30549144448644, 62.01348927098442, 67.547220173187, 72.09391254858139, 60.24194788647068, 58.7548701438868, 59.338152628994735, 62.9014625755286, 67.41513762687131, 63.16156505962507, 71.91432687689046, 69.63024553848707, 66.95381235061413, 56.68381327592561, 65.63436689103888, 62.902873419065685, 73.21648590716268, 52.59875616771394, 55.430499575622854, 54.41235247223281, 68.94725962193857, 81.5008896855197, 94.89616035435786, 91.6731679749451]
[54.926975, 57.112164, 31.581787, 31.812613, 60.094887, 53.62164, 57.54251, 52.421955, 64.18771, 48.172115, 68.25897, 62.502045, 70.893974, 76.330734, 24.135834, 52.234177, 55.4136, 69.365776, 73.36085, 94.18526, 60.984238, 53.367058, 58.187225, 60.485714, 73.89811, 66.23005, 46.066414, 36.41683, 53.090736, 40.01811, 42.86641, 42.34511, 51.162144, 19.650965, 41.31495, 22.063297, 66.48135, 91.84206, 77.28178, 75.9994, 66.948875, 57.170242, 52.13779, 56.312176, 47.1641, 52.042408, 69.8414, 33.137444, 38.298843, 27.192263, 27.653744, 22.899878, 30.348219, 29.66156, 42.557976, 52.10548, 31.010403, 64.23111, 93.771614, 39.733456, 50.711296, 41.791206, 39.213818, 45.80352, 40.79274, 51.081425, 47.85788, 51.36162, 46.24356, 46.83669, 51.814972, 43.829033, 46.068783, 49.28737, 44.010483, 38.433018, 40.37529, 39.745655, 47.523212, 48.913727, 38.544785, 38.16427, 40.29436, 42.612637, 46.21719, 44.381645, 52.47225, 53.081226, 46.838223, 38.446835, 46.47251, 42.53582, 52.15389, 35.011818, 43.92117, 44.1939, 57.602287, 68.68023, 82.53339, 78.39757]
[52.42318511009216, 55.909132957458496, 22.839084267616272, 22.09431678056717, 58.37160348892212, 49.80369508266449, 56.47512674331665, 51.23257040977478, 69.45289969444275, 49.59166944026947, 81.10061287879944, 65.52060842514038, 79.06333208084106, 77.87136435508728, 26.518353819847107, 71.93707823753357, 70.39152383804321, 96.34591937065125, 74.45592880249023, 110.82062721252441, 58.74660611152649, 58.27926993370056, 69.73152756690979, 72.02589511871338, 91.38992428779602, 62.63118386268616, 39.95983898639679, 31.03535771369934, 48.80204498767853, 26.955315470695496, 33.20713937282562, 28.37386131286621, 47.68669009208679, 15.683825314044952, 42.54399836063385, 20.285815000534058, 67.20726490020752, 90.76076149940491, 74.20582175254822, 98.70439171791077, 81.18802905082703, 73.49221706390381, 63.01684379577637, 74.04183745384216, 63.38064670562744, 54.36486601829529, 61.28830909729004, 20.971640944480896, 36.94273829460144, 19.384191930294037, 17.758570611476898, 20.456725358963013, 26.289713382720947, 28.97323966026306, 41.543787717819214, 52.196204662323, 31.12969696521759, 67.29068160057068, 106.3849687576294, 30.19838035106659, 53.576552867889404, 39.2345130443573, 27.906569838523865, 42.946845293045044, 36.645543575286865, 46.920210123062134, 42.03663468360901, 49.978408217430115, 41.4274662733078, 41.98853075504303, 51.86830759048462, 37.91874647140503, 39.945146441459656, 46.36276960372925, 35.492318868637085, 29.244083166122437, 31.661456823349, 30.009102821350098, 44.01215314865112, 40.71309268474579, 28.859511017799377, 26.50245428085327, 33.33520591259003, 36.00615859031677, 36.82796359062195, 40.02481997013092, 50.16319751739502, 55.49774765968323, 41.194698214530945, 31.54526948928833, 41.32198095321655, 34.80484485626221, 39.8236870765686, 29.54743504524231, 45.53118050098419, 51.703786849975586, 60.69820523262024, 69.54894661903381, 86.9458794593811, 80.45088052749634]
[0.7436249793217181, 0.7204263980979619, 0.8103801284674289, 0.8138498738089552, 0.6977532566492284, 0.7242449529914314, 0.7162497934920433, 0.7348057536769286, 0.7088439740325849, 0.7736772869218591, 0.7033064889988025, 0.7040286270638061, 0.6651382751257888, 0.6414428075244045, 0.8560123357681566, 0.7316441872097406, 0.6975639765162733, 0.6748407299718387, 0.6457662656108144, 0.5919027931883063, 0.6770902795827817, 0.7331139974170895, 0.7229139013633983, 0.71459572667562, 0.6759886181928856, 0.6731099828375269, 0.7362296493965805, 0.7736617218064155, 0.6892738606820876, 0.7423582183879092, 0.7333590048279128, 0.7292126454797627, 0.7180812974188014, 0.8769455419793146, 0.7791416575588496, 0.8514616348048538, 0.6692940568347927, 0.5805128247476639, 0.6329200739030598, 0.6727903513698854, 0.6903471769035585, 0.7407470727677514, 0.7460662297273826, 0.7423299773339685, 0.7745423741741826, 0.7648653232623687, 0.6843216812519579, 0.8181719263498234, 0.8081332337758426, 0.8470957630802907, 0.8447292148173079, 0.8892125578236959, 0.8396544405815926, 0.8308248815742091, 0.7704290972035058, 0.7281029152173122, 0.8096871945153482, 0.7024991852854177, 0.5823370927177441, 0.722905337947042, 0.7054418250201681, 0.7336224925597479, 0.7477953630871835, 0.7345926052983849, 0.7620882776153328, 0.717781994304273, 0.7353044620580369, 0.7318770392544898, 0.7479025749776733, 0.7439371666037125, 0.7354834608856403, 0.756357634184045, 0.7448957486631831, 0.7390354306413587, 0.7507786074709177, 0.7790572727691025, 0.7689183439750983, 0.7662496554778826, 0.7453910733235428, 0.7282530222754464, 0.7729271941177476, 0.7785325097382296, 0.7763339241674856, 0.7629025569991841, 0.7458889487887745, 0.7619221369265742, 0.7289299486255238, 0.7375394616697606, 0.7476278428815043, 0.7863390528345019, 0.7526013137237294, 0.7628972471604709, 0.7240216534506418, 0.8017370515162277, 0.7910632085291045, 0.7949009725449779, 0.7401138484725738, 0.6927948824072665, 0.6423034438825124, 0.6544520425150016]

'''